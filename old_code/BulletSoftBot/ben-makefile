CXX = g++
RM	= rm
EXE	= bulletSoftBot

.DEFAULT_GOAL		:= nographics

SRCDIR				:= src
INCDIR				:= src /usr/local/include/bullet
OBJDIR				:= .obj

$(shell mkdir -p $(OBJDIR)/core $(OBJDIR)/graphics $(OBJDIR)/physics)

GRAPHICS_LIBDIR		:= glut GLU GL
BPHYSICS_LIBDIR		:= BulletSoftBody BulletDynamics BulletCollision LinearMath

STANDARD_SOURCES	:= $(shell find $(SRCDIR) -name "*.cpp" -not -path "$(SRCDIR)/graphics/*")
GRAPHICS_SOURCES	:= $(shell find $(SRCDIR)/graphics -name "*.cpp")

STANDARD_OBJECTS	:= $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(STANDARD_SOURCES))
GRAPHICS_OBJECTS	:= $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(GRAPHICS_SOURCES))

INCLUDES			:= $(addprefix -I,$(INCDIR))
GRAPHICS_LIBRARIES	:= $(addprefix -l,$(GRAPHICS_LIBDIR))
BPHYSICS_LIBRARIES	:= $(addprefix -l,$(BPHYSICS_LIBDIR))
BASEFLAGS			:= -std=c++0x -pedantic-errors -O2 -g
WARNFLAGS			:= -Wall -Werror
CCFLAGS				:= $(INCLUDES) $(BASEFLAGS) $(WARNFLAGS) 

OBJECTS				:= $(STANDARD_OBJECTS)
LIBRARIES			:= $(BPHYSICS_LIBRARIES)

# set graphics specific compilation options if necessary
ifeq ($(MAKECMDGOALS), graphics)
CCFLAGS 			+= -DGRAPHICS
OBJECTS				+= $(GRAPHICS_OBJECTS)
LIBRARIES			+= $(GRAPHICS_LIBRARIES)
endif

# MAKE RULES
graphics   : $(EXE)

nographics : $(EXE)
	
$(EXE)     : $(OBJECTS) 
	$(info Linking $(EXE))
	@$(CXX) $(CCFLAGS) $(OBJECTS) $(LIBRARIES) -o $@

clean :
	@$(RM) -rf $(OBJDIR) $(EXE)

# cpp compilation rules
$(OBJDIR)/%.o : $(SRCDIR)/%.cpp makefile 
	$(info Compiling $@)
	@$(CXX) -c -MMD $(CCFLAGS) $< -o $@

-include $(OBJECTS:%.o=%.d)
