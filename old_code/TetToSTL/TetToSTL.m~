function [verts, tets] = TetToSTL(infilename)



    
    faces = [];
    infile = fopen(infilename,'r')
    
   [verts, tets] = ParseTetFile(infilename);
   
   for tetindex = 1:size(tets,1)
      faces = [faces;facesFromVerts(tets(tetindex,:))];
     
   end
   
   uniqueFaces = findUniqueFaces(faces);
   
%    
%   facet normal ni nj nk
%    outer loop
%      vertex v1x v1y v1z
%      vertex v2x v2y v2z
%      vertex v3x v3y v3z'
%    endloop
%  endfacet
 
   outfilename = 'foo.stl'
   outfile = fopen(outfilename,'w')
   
   fprintf(outfile, 'solid foo\n');
   for findex = i:size(uniqueFaces,2)
       fprintf(outfile,'facet normal 0 0 0\n');
       fprintf(outfile,'outer loop\n');
      
       curface = uniquefaces(findex,:);
       
       %subract one to account for c style indexes
       v1index = curface(1) - 1;
       v2index = curface(2) - 1;
       v3index = curface(3) - 1;
       
       v1 = verts(v1index,:);
       v2 = verts(v2index,:);
       v3 = verts(v3index,:);
       
       fprintf(outfile,'vertex %e %e %e\n',v1(1),v1(2),v1(3));
         fprintf(outfile,'vertex %e %e %e\n',v2(1),v2(2),v2(3));
           fprintf(outfile,'vertex %e %e %e\n',v3(1),v3(2),v3(3));
      
       fprintf(outfile,'endloop\n');
       
       fprintf(outfile,'endfacet\n');
        
   end
   
   
   fprintf(outfile,'endsolid foo\n');
 
   fclose(outfile)
 
   disp(faces)
   
 